basePath: /
definitions:
  dto.CreateAdvertInput:
    properties:
      apartment_id:
        type: integer
      babies:
        type: boolean
      concierge:
        type: boolean
      conditioner:
        type: boolean
      deposit:
        type: number
      dishwasher:
        type: boolean
      internet:
        type: boolean
      pets:
        type: boolean
      rent:
        type: number
      rental_type:
        type: string
      smoking:
        type: boolean
      title:
        type: string
      tv:
        type: boolean
      washing_machine:
        type: boolean
    required:
    - apartment_id
    - deposit
    - rent
    - rental_type
    - title
    type: object
  dto.CreateApartmentInput:
    properties:
      area:
        type: integer
      bathroom_type:
        type: string
      building:
        type: string
      city:
        type: string
      concierge:
        type: boolean
      construction_type:
        type: string
      construction_year:
        type: integer
      elevator:
        type: boolean
      floor:
        type: integer
      garbage_chute:
        type: boolean
      latitude:
        type: number
      longitude:
        type: number
      remont:
        type: string
      rooms:
        type: integer
      street:
        type: string
    required:
    - city
    - construction_year
    - floor
    - latitude
    - longitude
    - rooms
    - street
    type: object
  dto.CreateUser:
    properties:
      birthdate:
        type: string
      city:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        minLength: 8
        type: string
      surname:
        type: string
    required:
    - email
    - name
    - password
    - surname
    type: object
  dto.GetAdvertResponse:
    properties:
      apartment:
        $ref: '#/definitions/dto.GetApartmentResponse'
      apartment_id:
        type: integer
      babies:
        type: boolean
      concierge:
        type: boolean
      conditioner:
        type: boolean
      created_at:
        type: string
      deposit:
        type: number
      dishwasher:
        type: boolean
      id:
        type: integer
      internet:
        type: boolean
      is_favorite:
        type: boolean
      pets:
        type: boolean
      rent:
        type: number
      rental_type:
        type: string
      smoking:
        type: boolean
      status:
        type: string
      title:
        type: string
      tv:
        type: boolean
      updated_at:
        type: string
      user_id:
        type: integer
      washing_machine:
        type: boolean
    type: object
  dto.GetApartmentPhotoResponse:
    properties:
      apartment_id:
        type: integer
      id:
        type: integer
      is_cover:
        type: boolean
      url:
        type: string
    type: object
  dto.GetApartmentResponse:
    properties:
      apartment_number:
        type: string
      apartment_photos:
        items:
          $ref: '#/definitions/dto.GetApartmentPhotoResponse'
        type: array
      area:
        type: integer
      bathroom_type:
        type: string
      building:
        type: string
      city:
        type: string
      concierge:
        type: boolean
      construction_type:
        type: string
      construction_year:
        type: integer
      created_at:
        type: string
      district:
        type: string
      elevator:
        type: boolean
      floor:
        type: integer
      garbage_chute:
        type: boolean
      house:
        type: string
      id:
        type: integer
      latitude:
        type: number
      longitude:
        type: number
      rating:
        type: number
      remont:
        type: string
      rooms:
        type: integer
      status:
        type: string
      street:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  dto.UpdateAdvertInput:
    properties:
      babies:
        type: boolean
      concierge:
        type: boolean
      conditioner:
        type: boolean
      deposit:
        type: number
      dishwasher:
        type: boolean
      internet:
        type: boolean
      pets:
        type: boolean
      rent:
        type: number
      rental_type:
        type: string
      smoking:
        type: boolean
      status:
        type: string
      title:
        type: string
      tv:
        type: boolean
      washing_machine:
        type: boolean
    type: object
  dto.UpdateApartmentInput:
    properties:
      apartment_number:
        type: string
      area:
        type: integer
      bathroom_type:
        type: string
      building:
        type: string
      city:
        type: string
      concierge:
        type: boolean
      construction_type:
        type: string
      construction_year:
        type: integer
      district:
        type: string
      elevator:
        type: boolean
      floor:
        type: integer
      garbage_chute:
        type: boolean
      house:
        type: string
      latitude:
        type: number
      longitude:
        type: number
      remont:
        type: string
      rooms:
        type: integer
      status:
        type: string
      street:
        type: string
    type: object
  error.ErrorDetail:
    properties:
      field:
        type: string
      message:
        type: string
    type: object
  error.Response:
    properties:
      details:
        items:
          $ref: '#/definitions/error.ErrorDetail'
        type: array
      error:
        type: string
    type: object
  handler.AdvertListResponse:
    properties:
      adverts:
        items:
          $ref: '#/definitions/dto.GetAdvertResponse'
        type: array
      total:
        type: integer
    type: object
  handler.ErrorResponse:
    properties:
      message:
        example: Invalid input data
        type: string
    type: object
  handler.ResetPasswordInput:
    properties:
      new_password:
        type: string
      token:
        type: string
    required:
    - new_password
    - token
    type: object
  handler.VerifyRequest:
    properties:
      code:
        type: string
    type: object
  handler.VerifyResendRequest:
    properties:
      email:
        example: user@example.com
        type: string
    type: object
  handler.response:
    properties:
      message:
        type: string
    type: object
  handler.signInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.tokenResponse:
    properties:
      accessToken:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API для аренды квартир
  title: Renting App API
  version: "1.0"
paths:
  /advert:
    post:
      consumes:
      - application/json
      description: Создает объявление авторизированному пользователю
      parameters:
      - description: Advert input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAdvertInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Некорректный ID объявления
          schema:
            $ref: '#/definitions/error.Response'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/error.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/error.Response'
      security:
      - ApiKeyAuth: []
      summary: Создать объявление
      tags:
      - adverts
  /advert/{id}:
    delete:
      parameters:
      - description: Advert ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Удалить объявление
      tags:
      - adverts
    patch:
      consumes:
      - application/json
      parameters:
      - description: Advert ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateAdvertInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновить объявление
      tags:
      - adverts
  /adverts:
    get:
      consumes:
      - application/json
      description: Возвращает список всех объявлений с фильтрацией. Если пользователь
        авторизован — добавляет флаг избранного.
      parameters:
      - description: Город
        in: query
        name: city
        type: string
      - description: Район
        in: query
        name: district
        type: string
      - description: Тип санузла
        in: query
        name: bathroom_type
        type: string
      - description: Ремонт
        in: query
        name: remont
        type: string
      - description: Тип аренды
        in: query
        name: rental_type
        type: string
      - description: Количество комнат
        in: query
        name: rooms
        type: integer
      - description: Минимальная цена
        in: query
        name: price_from
        type: integer
      - description: Максимальная цена
        in: query
        name: price_to
        type: integer
      - description: Минимальный этаж
        in: query
        name: floor_min
        type: integer
      - description: Максимальный этаж
        in: query
        name: floor_max
        type: integer
      - description: Минимальный год постройки
        in: query
        name: year_min
        type: integer
      - description: Максимальный год постройки
        in: query
        name: year_max
        type: integer
      - description: Минимальный рейтинг квартиры
        in: query
        name: apartment_rating_min
        type: number
      - description: Минимальный рейтинг арендодателя
        in: query
        name: landlord_rating_min
        type: number
      - description: Наличие лифта
        in: query
        name: elevator
        type: boolean
      - description: Наличие консьержа
        in: query
        name: concierge
        type: boolean
      - description: Можно с животными
        in: query
        name: pets
        type: boolean
      - description: Можно с детьми
        in: query
        name: babies
        type: boolean
      - description: Можно курить
        in: query
        name: smoking
        type: boolean
      - description: Наличие интернета
        in: query
        name: internet
        type: boolean
      - description: Наличие стиральной машины
        in: query
        name: washing_machine
        type: boolean
      - description: Наличие телевизора
        in: query
        name: tv
        type: boolean
      - description: Наличие кондиционера
        in: query
        name: conditioner
        type: boolean
      - description: Наличие посудомойки
        in: query
        name: dishwasher
        type: boolean
      - description: Широта для геолокации
        in: query
        name: lat
        type: number
      - description: Долгота для геолокации
        in: query
        name: lng
        type: number
      - description: Лимит записей, по умолчанию 20
        in: query
        name: limit
        type: integer
      - description: Смещение, по умолчанию 0
        in: query
        name: offset
        type: integer
      - description: Поле сортировки, по умолчанию created_at
        in: query
        name: sort_by
        type: string
      - description: 'Направление сортировки: asc или desc, по умолчанию desc'
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AdvertListResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/error.Response'
      summary: Получение списка объявлений
      tags:
      - adverts
  /adverts/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает подробности одного объявления по его идентификатору
      parameters:
      - description: ID объявления
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetAdvertResponse'
        "400":
          description: Неверный ID объявления
          schema:
            $ref: '#/definitions/error.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/error.Response'
      summary: Получение объявления по ID
      tags:
      - adverts
  /apartment/:
    get:
      description: Получить список всех квартир пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить все квартиры
      tags:
      - apartments
    post:
      consumes:
      - application/json
      description: Создать новую квартиру
      parameters:
      - description: Apartment input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateApartmentInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Создать квартиру
      tags:
      - apartments
  /apartment/{id}:
    delete:
      description: Удалить квартиру по ID
      parameters:
      - description: Apartment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Удалить квартиру
      tags:
      - apartments
    get:
      description: Получить квартиру по ID
      parameters:
      - description: Apartment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetApartmentResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Получить квартиру по ID
      tags:
      - apartments
    patch:
      consumes:
      - application/json
      description: Обновить данные по квартире
      parameters:
      - description: Apartment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Apartment update input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateApartmentInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обновить квартиру
      tags:
      - apartments
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Сброс пароля пользователя через токен
      parameters:
      - description: Данные для сброса пароля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.ResetPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handler.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.response'
      summary: Reset Password
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Вход пользователя в систему с возвратом access и refresh токенов
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Авторизация пользователя
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Создаёт нового пользователя
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - auth
  /auth/verify:
    post:
      consumes:
      - application/json
      description: Проверяет код для верификации электронной почты пользователя
      parameters:
      - description: Код для подтверждения
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Подтверждение электронной почты
      tags:
      - auth
  /auth/verify/resend:
    post:
      consumes:
      - application/json
      description: Переотправялет код верификации
      parameters:
      - description: Email для переотправки кода
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.VerifyResendRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorResponse'
      summary: Переотправка кода верификации
      tags:
      - auth
  /my/advert:
    get:
      description: Возвращает список объявлений, созданных авторизованным пользователем,
        с поддержкой фильтров, сортировки и пагинации
      parameters:
      - description: Город
        in: query
        name: city
        type: string
      - description: Район
        in: query
        name: district
        type: string
      - description: Тип санузла
        in: query
        name: bathroom_type
        type: string
      - description: Ремонт
        in: query
        name: remont
        type: string
      - description: Тип аренды
        in: query
        name: rental_type
        type: string
      - description: Количество комнат
        in: query
        name: rooms
        type: integer
      - description: Минимальная цена
        in: query
        name: price_from
        type: integer
      - description: Максимальная цена
        in: query
        name: price_to
        type: integer
      - description: Минимальный этаж
        in: query
        name: floor_min
        type: integer
      - description: Максимальный этаж
        in: query
        name: floor_max
        type: integer
      - description: Минимальный год постройки
        in: query
        name: year_min
        type: integer
      - description: Максимальный год постройки
        in: query
        name: year_max
        type: integer
      - description: Минимальный рейтинг квартиры
        in: query
        name: apartment_rating_min
        type: number
      - description: Минимальный рейтинг арендодателя
        in: query
        name: landlord_rating_min
        type: number
      - description: Наличие лифта
        in: query
        name: elevator
        type: boolean
      - description: Наличие консьержа
        in: query
        name: concierge
        type: boolean
      - description: Можно с животными
        in: query
        name: pets
        type: boolean
      - description: Можно с детьми
        in: query
        name: babies
        type: boolean
      - description: Можно курить
        in: query
        name: smoking
        type: boolean
      - description: Наличие интернета
        in: query
        name: internet
        type: boolean
      - description: Наличие стиральной машины
        in: query
        name: washing_machine
        type: boolean
      - description: Наличие телевизора
        in: query
        name: tv
        type: boolean
      - description: Наличие кондиционера
        in: query
        name: conditioner
        type: boolean
      - description: Наличие посудомойки
        in: query
        name: dishwasher
        type: boolean
      - description: Широта для геолокации
        in: query
        name: lat
        type: number
      - description: Долгота для геолокации
        in: query
        name: lng
        type: number
      - description: Лимит записей, по умолчанию 20
        in: query
        name: limit
        type: integer
      - description: Смещение, по умолчанию 0
        in: query
        name: offset
        type: integer
      - description: Поле сортировки, по умолчанию created_at
        in: query
        name: sort_by
        type: string
      - description: 'Направление сортировки: asc или desc, по умолчанию desc'
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.AdvertListResponse'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/error.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/error.Response'
      security:
      - ApiKeyAuth: []
      summary: Получить все объявления пользователя
      tags:
      - adverts
  /my/advert/{id}:
    get:
      description: Возвращает объявление пользователя по ID
      parameters:
      - description: Advert ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetAdvertResponse'
        "400":
          description: Некорректный ID объявления
          schema:
            $ref: '#/definitions/error.Response'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/error.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/error.Response'
      security:
      - ApiKeyAuth: []
      summary: Получить объявление пользователя по ID
      tags:
      - adverts
swagger: "2.0"
