// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/advert": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создает объявление авторизированному пользователю",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Создать объявление",
                "parameters": [
                    {
                        "description": "Advert input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateAdvertInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Некорректный ID объявления",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    }
                }
            }
        },
        "/advert/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Удалить объявление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advert ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Обновить объявление",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advert ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateAdvertInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/adverts": {
            "get": {
                "description": "Возвращает список всех объявлений с фильтрацией. Если пользователь авторизован — добавляет флаг избранного.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Получение списка объявлений",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Город",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Район",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип санузла",
                        "name": "bathroom_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ремонт",
                        "name": "remont",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип аренды",
                        "name": "rental_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество комнат",
                        "name": "rooms",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальная цена",
                        "name": "price_from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальная цена",
                        "name": "price_to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальный этаж",
                        "name": "floor_min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальный этаж",
                        "name": "floor_max",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальный год постройки",
                        "name": "year_min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальный год постройки",
                        "name": "year_max",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Минимальный рейтинг квартиры",
                        "name": "apartment_rating_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Минимальный рейтинг арендодателя",
                        "name": "landlord_rating_min",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие лифта",
                        "name": "elevator",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие консьержа",
                        "name": "concierge",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Можно с животными",
                        "name": "pets",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Можно с детьми",
                        "name": "babies",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Можно курить",
                        "name": "smoking",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие интернета",
                        "name": "internet",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие стиральной машины",
                        "name": "washing_machine",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие телевизора",
                        "name": "tv",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие кондиционера",
                        "name": "conditioner",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие посудомойки",
                        "name": "dishwasher",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Широта для геолокации",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Долгота для геолокации",
                        "name": "lng",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей, по умолчанию 20",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение, по умолчанию 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле сортировки, по умолчанию created_at",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Направление сортировки: asc или desc, по умолчанию desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.AdvertListResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    }
                }
            }
        },
        "/adverts/{id}": {
            "get": {
                "description": "Возвращает подробности одного объявления по его идентификатору",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Получение объявления по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID объявления",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAdvertResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный ID объявления",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    }
                }
            }
        },
        "/apartment/": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получить список всех квартир пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Получить все квартиры",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Создать новую квартиру",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Создать квартиру",
                "parameters": [
                    {
                        "description": "Apartment input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateApartmentInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/apartment/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Получить квартиру по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Получить квартиру по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Apartment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetApartmentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Удалить квартиру по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Удалить квартиру",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Apartment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обновить данные по квартире",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "apartments"
                ],
                "summary": "Обновить квартиру",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Apartment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Apartment update input",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateApartmentInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Сброс пароля пользователя через токен",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Данные для сброса пароля",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.ResetPasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.response"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "description": "Вход пользователя в систему с возвратом access и refresh токенов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Авторизация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.signInInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.tokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Создаёт нового пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify": {
            "post": {
                "description": "Проверяет код для верификации электронной почты пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Подтверждение электронной почты",
                "parameters": [
                    {
                        "description": "Код для подтверждения",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.VerifyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/verify/resend": {
            "post": {
                "description": "Переотправялет код верификации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Переотправка кода верификации",
                "parameters": [
                    {
                        "description": "Email для переотправки кода",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.VerifyResendRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/my/advert": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает список объявлений, созданных авторизованным пользователем, с поддержкой фильтров, сортировки и пагинации",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Получить все объявления пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Город",
                        "name": "city",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Район",
                        "name": "district",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип санузла",
                        "name": "bathroom_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Ремонт",
                        "name": "remont",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Тип аренды",
                        "name": "rental_type",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Количество комнат",
                        "name": "rooms",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальная цена",
                        "name": "price_from",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальная цена",
                        "name": "price_to",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальный этаж",
                        "name": "floor_min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальный этаж",
                        "name": "floor_max",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Минимальный год постройки",
                        "name": "year_min",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Максимальный год постройки",
                        "name": "year_max",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Минимальный рейтинг квартиры",
                        "name": "apartment_rating_min",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Минимальный рейтинг арендодателя",
                        "name": "landlord_rating_min",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие лифта",
                        "name": "elevator",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие консьержа",
                        "name": "concierge",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Можно с животными",
                        "name": "pets",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Можно с детьми",
                        "name": "babies",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Можно курить",
                        "name": "smoking",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие интернета",
                        "name": "internet",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие стиральной машины",
                        "name": "washing_machine",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие телевизора",
                        "name": "tv",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие кондиционера",
                        "name": "conditioner",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Наличие посудомойки",
                        "name": "dishwasher",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Широта для геолокации",
                        "name": "lat",
                        "in": "query"
                    },
                    {
                        "type": "number",
                        "description": "Долгота для геолокации",
                        "name": "lng",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Лимит записей, по умолчанию 20",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Смещение, по умолчанию 0",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Поле сортировки, по умолчанию created_at",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Направление сортировки: asc или desc, по умолчанию desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.AdvertListResponse"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    }
                }
            }
        },
        "/my/advert/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Возвращает объявление пользователя по ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adverts"
                ],
                "summary": "Получить объявление пользователя по ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Advert ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetAdvertResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный ID объявления",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    },
                    "401": {
                        "description": "Пользователь не авторизован",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/error.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateAdvertInput": {
            "type": "object",
            "required": [
                "apartment_id",
                "deposit",
                "rent",
                "rental_type",
                "title"
            ],
            "properties": {
                "apartment_id": {
                    "type": "integer"
                },
                "babies": {
                    "type": "boolean"
                },
                "concierge": {
                    "type": "boolean"
                },
                "conditioner": {
                    "type": "boolean"
                },
                "deposit": {
                    "type": "number"
                },
                "dishwasher": {
                    "type": "boolean"
                },
                "internet": {
                    "type": "boolean"
                },
                "pets": {
                    "type": "boolean"
                },
                "rent": {
                    "type": "number"
                },
                "rental_type": {
                    "type": "string"
                },
                "smoking": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "tv": {
                    "type": "boolean"
                },
                "washing_machine": {
                    "type": "boolean"
                }
            }
        },
        "dto.CreateApartmentInput": {
            "type": "object",
            "required": [
                "city",
                "construction_year",
                "floor",
                "latitude",
                "longitude",
                "rooms",
                "street"
            ],
            "properties": {
                "area": {
                    "type": "integer"
                },
                "bathroom_type": {
                    "type": "string"
                },
                "building": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "concierge": {
                    "type": "boolean"
                },
                "construction_type": {
                    "type": "string"
                },
                "construction_year": {
                    "type": "integer"
                },
                "elevator": {
                    "type": "boolean"
                },
                "floor": {
                    "type": "integer"
                },
                "garbage_chute": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "remont": {
                    "type": "string"
                },
                "rooms": {
                    "type": "integer"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "dto.CreateUser": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "surname"
            ],
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "dto.GetAdvertResponse": {
            "type": "object",
            "properties": {
                "apartment": {
                    "$ref": "#/definitions/dto.GetApartmentResponse"
                },
                "apartment_id": {
                    "type": "integer"
                },
                "babies": {
                    "type": "boolean"
                },
                "concierge": {
                    "type": "boolean"
                },
                "conditioner": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "deposit": {
                    "type": "number"
                },
                "dishwasher": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "internet": {
                    "type": "boolean"
                },
                "is_favorite": {
                    "type": "boolean"
                },
                "pets": {
                    "type": "boolean"
                },
                "rent": {
                    "type": "number"
                },
                "rental_type": {
                    "type": "string"
                },
                "smoking": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tv": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "washing_machine": {
                    "type": "boolean"
                }
            }
        },
        "dto.GetApartmentPhotoResponse": {
            "type": "object",
            "properties": {
                "apartment_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "is_cover": {
                    "type": "boolean"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "dto.GetApartmentResponse": {
            "type": "object",
            "properties": {
                "apartment_number": {
                    "type": "string"
                },
                "apartment_photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GetApartmentPhotoResponse"
                    }
                },
                "area": {
                    "type": "integer"
                },
                "bathroom_type": {
                    "type": "string"
                },
                "building": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "concierge": {
                    "type": "boolean"
                },
                "construction_type": {
                    "type": "string"
                },
                "construction_year": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "elevator": {
                    "type": "boolean"
                },
                "floor": {
                    "type": "integer"
                },
                "garbage_chute": {
                    "type": "boolean"
                },
                "house": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "rating": {
                    "type": "number"
                },
                "remont": {
                    "type": "string"
                },
                "rooms": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dto.UpdateAdvertInput": {
            "type": "object",
            "properties": {
                "babies": {
                    "type": "boolean"
                },
                "concierge": {
                    "type": "boolean"
                },
                "conditioner": {
                    "type": "boolean"
                },
                "deposit": {
                    "type": "number"
                },
                "dishwasher": {
                    "type": "boolean"
                },
                "internet": {
                    "type": "boolean"
                },
                "pets": {
                    "type": "boolean"
                },
                "rent": {
                    "type": "number"
                },
                "rental_type": {
                    "type": "string"
                },
                "smoking": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tv": {
                    "type": "boolean"
                },
                "washing_machine": {
                    "type": "boolean"
                }
            }
        },
        "dto.UpdateApartmentInput": {
            "type": "object",
            "properties": {
                "apartment_number": {
                    "type": "string"
                },
                "area": {
                    "type": "integer"
                },
                "bathroom_type": {
                    "type": "string"
                },
                "building": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "concierge": {
                    "type": "boolean"
                },
                "construction_type": {
                    "type": "string"
                },
                "construction_year": {
                    "type": "integer"
                },
                "district": {
                    "type": "string"
                },
                "elevator": {
                    "type": "boolean"
                },
                "floor": {
                    "type": "integer"
                },
                "garbage_chute": {
                    "type": "boolean"
                },
                "house": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "remont": {
                    "type": "string"
                },
                "rooms": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "error.ErrorDetail": {
            "type": "object",
            "properties": {
                "field": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "error.Response": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/error.ErrorDetail"
                    }
                },
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.AdvertListResponse": {
            "type": "object",
            "properties": {
                "adverts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GetAdvertResponse"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Invalid input data"
                }
            }
        },
        "handler.ResetPasswordInput": {
            "type": "object",
            "required": [
                "new_password",
                "token"
            ],
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.VerifyRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                }
            }
        },
        "handler.VerifyResendRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "handler.response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.signInInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "handler.tokenResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Renting App API",
	Description:      "API для аренды квартир",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
